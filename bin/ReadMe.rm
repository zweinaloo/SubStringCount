

/**
 * @mainpage
## 简要说明 ##
<b>数据源</b>是通过网络爬虫采集的互联网数据，存储到文件中，把词文件看成一个很长的字符串读入内存，并以Unicode编码。每个字符占2字节空间

每个处理语料包括m个字符，则需要2m字节的存储空间。以下用Ci表示C中的第i个字符

1. <b>得到待处理语料C后对C使用停用词表进行过滤</b>。
2. <b>构造一个长为m的P表（PointTable）</b>。P表的每一项Pi保存指向C中子串Si的指针。Pi指向的子串Si定义为从Pi所指字符Ci到C中最后一个字符Cm中的m-i+1所组成的字符串。
3. <b>根据P表项所指的子串对P表的元素进行排序</b>。在使用快排算法的情况下排序时间复杂度为O(nlogn)。
4. <b>根据已排序好的P表的基础上构建记录相邻子串相同的最长左子串长度的L表(LeftTable)</b>。其中Li记录排序以后的Spi-1和Spi的相同最长左子串长度，从串首开始相同的字符的个数(L1=0)。例如:若Pi指向的子串Spi="吸收外资最多的国家",Pi -1指向的子串Spi -1="吸收外资最多的一年",则Li=6。
5. <b>构建P表和L之后使用串频统计算法对长度为N（1≤N≤255）的子串进行串频统计</b>；
6. 经过串频统计之后，对子串集合使用<b>通信度</b>、<b>IWP过滤</b>、<b>互信度过滤</b>、<b>首尾字过滤</b>进行垃圾串过滤工作。仅实现近频子串过滤。
> 例子："刘德华"出现10次，"刘德"出现10次，"德华"出现10次，则将"刘德"与"德化"删除掉。
## 存在问题 ##
 */

/**
 * 参考文件
 * @class ReadMe
 * @brief 解释说明
 * @author Zwei
 * @date 2015年7月18日 下午4:16:49
 * @version V1.0
 */
public class ReadMe {

}
